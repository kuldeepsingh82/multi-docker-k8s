# Run mandatory command for configuration. Read https://kubernetes.github.io/ingress-nginx/deploy/ for more details
# `kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml`
# This will deploy the pod (ingress-nginx) along with health check deployment

# For local setup with miniqube make sure you run following command
# `minikube addons enable ingress`

# Follow the instructions for different cloud providers (AWS, Google Cloud, Azure)

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-service
  annotations: # High level configuration for Ingress service
    kubernetes.io/ingress.class: nginx # Create nginx controller based on ingress
    nginx.ingress.kubernetes.io/rewrite-target: /$1 # Configure the rewrite rules
    certmanager.k8s.io/cluster-issuer: 'letsencrypt-prod' # For HTTPS, The issuer
    nginx.ingress.kubernetes.io/ssl-redirect: 'true' # Redirect all http requests to https
spec:
  tls:
    - hosts: # Routing will be defined for following domains
        - www.k8s.deeml.in
        - k8s.deeml.in
      secretName: deepml-in # Coming from certificate configuration. This is where certificates are stored
  rules:
    - host: k8s.deeml.in # Routing for 1st domain
      http:
        paths:
          - path: /?(.*)
            backend:
              serviceName: client-cluster-ip-service
              servicePort: 3000
          - path: /api/?(.*)
            backend:
              serviceName: server-cluster-ip-service
              servicePort: 5000
    - host: www.k8s.deeml.in # Routing for 2nd domain. No other choice have to repeat
      http:
        paths:
          - path: /?(.*)
            backend:
              serviceName: client-cluster-ip-service
              servicePort: 3000
          - path: /api/?(.*)
            backend:
              serviceName: server-cluster-ip-service
              servicePort: 5000
